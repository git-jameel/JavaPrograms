import java.util.*;

public class RailwayReservation {
	static int lowerc = 2;
	static int middlec = 2;
	static int upperc = 2;
	static int racc = 2;
	static int wlc = 2;
	static String[] name;
	static int[] age;
	static String[] gender;
	static String[] berth;
	static int[] pnr;
	static String from="chennai";
	static String to="madurai";
	static int pnr1=11220;
	public static void main(String args[]) {
		Scanner scan = new Scanner(System.in);
		System.out.println("Signin: ");
		System.out.println("Enter username: ");
		String Uname = scan.nextLine();
		System.out.println("Enter password: ");
		String password = scan.nextLine();
		if (password.length() >= 6) {
			System.out.println("Signin successfull...");
			RailwayReservation.choose(upperc, middlec, lowerc);
		}
	}

	public static void choose(int upperc, int middlec, int lowerc) {
		Scanner scan = new Scanner(System.in);
		System.out.println("1.Book tickets | 2.Cancel tickets | 3.Availabe tickets | 4.Print tickets | 5.Exit");
		int c = scan.nextInt();
		switch (c) {
		case 1:
			RailwayReservation.bookTickets();
			break;
		case 2:
			RailwayReservation.cancelTickets();
			break;
		case 3:
			RailwayReservation.availableTickets();
			break;
		case 4:
			// RailwayReservation.printTickets;
			break;
		case 5:
			break;

		}
	}

	public static void availableTickets() {
		Scanner scan = new Scanner(System.in);
		System.out.println("Available Tickets.... ");
		System.out.println("lower=" + lowerc + "\nmiddle=" + middlec + "\nupper=" + upperc + "\nrac=" + racc + "\nwl="
				+ wlc + "\n\n1. BookTickets" + "\n2.Exit");
		int d = scan.nextInt();
		switch (d) {
		case 1:
			RailwayReservation.bookTickets();
			break;
		case 2:
			break;
		}
	}
	
	public static void bookTickets() {
		Scanner scan = new Scanner(System.in);
		System.out.println("How many tickets do you want to book? ");
		int n = scan.nextInt();
		if(n<=10){
		//System.out.println("Enter Name, Age, Gender(m/f), berth(lower,middle,upper,nobirth) in order: ");
		String newName;
		int newAge;
		String newGender;
		String newBirth;
		for (int i = 0; i < n; i++) {
			System.out.println("Enter Name: ");
			newName = scan.next();
			System.out.println("Enter Age: ");
			newAge = scan.nextInt();
			System.out.println("Enter Gender(m/f): ");
			newGender = scan.next();
			System.out.println("Enter berth(lower,middle,upper,nobirth): ");
			newBirth = scan.next();
			pnr[i]=pnr1;
			name = updatedName(name, newName);
			age = updatedAge(age, newAge);
			gender = updatedGender(gender, newGender);
			if(newAge>=60)
				newBirth="lower";
			if(newAge<=10)
				newBirth="nobirth";
			if (newBirth.equals("lower")) {
			
				 if (lowerc > 0) {
					berth = updatedBerth(berth, newBirth);
					lowerc--;
				} else if (middlec > 0) {
					berth = updatedBerth(berth, "middle");
					middlec--;
				}else if (upperc > 0) {
					berth = updatedBerth(berth, "upper");
					upperc--;
				} else if (racc > 0) {
					berth = updatedBerth(berth, "racc");
					racc--;
				} else if (wlc > 0) {
					berth = updatedBerth(berth, "wlc");
					wlc--;
				}
			}

			if (newBirth.equals("middle")) {
				if (middlec > 0) {
					berth = updatedBerth(berth, newBirth);
					middlec--;
				} else if (upperc > 0) {
					berth = updatedBerth(berth, "upper");
					upperc--;
				}else if (lowerc > 0) {
					berth = updatedBerth(berth, "lower");
					lowerc--;
				}
				else if (racc > 0) {
					berth = updatedBerth(berth, "rac");
					racc--;
				} else if (wlc > 0) {
					berth = updatedBerth(berth, "wl");
					wlc--;
				}
			}

			if (newBirth.equals("upper")) {
				if (upperc > 0) {
					berth = updatedBerth(berth, newBirth);
					upperc--;
				} else if (middlec > 0) {
					berth = updatedBerth(berth, "middle");
					middlec--;
				}else if (lowerc > 0) {
					berth = updatedBerth(berth, "lower");
					lowerc--;
				}else if (racc > 0) {
					berth = updatedBerth(berth, "rac");
					racc--;
				} else if (wlc > 0) {
					berth = updatedBerth(berth, "wl");
					wlc--;
				}
			}
			if(newBirth.equals("nobirth")){
				newBirth="nobirth";
			berth = updatedBerth(berth, newBirth);
			}

			if (upperc < 1 && middlec < 1 && lowerc < 1 && racc < 1 && wlc < 1) {
				System.out.println("No Tickets!");
				break;
			}
		}
		pnr1+=1;
		System.out.println("Booked Sucessfully...");
		RailwayReservation.show(name,age,gender,berth,pnr);
		}
		else{
			System.out.println("only 10 tickets avaialble...");
			RailwayReservation.bookTickets();
		}
	}
	public static void show(String[] name2, int[] age2, String[] gender2, String[] berth2,int[] pnr2){
		System.out.println("seat\t" +"PNR no.\t"+ "Name\t" + "Age\t" + "Gender\t" + "Berth");
		for (int k = 1; k <= name2.length; k++) {
			System.out.println(k + "\t" +pnr2+ "\t" + name2[k - 1] + "\t" + age2[k - 1] + "\t" + gender2[k - 1] + "\t" + berth2[k - 1]);
		}
		RailwayReservation.choose(upperc, middlec, lowerc);
	}
	private static void cancelTickets() {
		System.out.println("Enter the seat no. of ticket u want to delete: ");
		Scanner scan=new Scanner(System.in);
		int d=scan.nextInt();
		name=deleteNameOrGender(d,name);
		age=deleteAge(d,age);
		gender=deleteNameOrGender(d,gender);
		berth=deleteBerth(d,berth);
		System.out.println("Deleted sucessfully: ");
		RailwayReservation.show(name,age,gender,berth,pnr);
		RailwayReservation.choose(upperc, middlec, lowerc);
	}
	
	private static String[] updatedBerth(String[] existingBerth, String string) {
		if (existingBerth == null) {
			existingBerth = new String[0];
		}
		String[] berth = new String[existingBerth.length + 1];
		for (int i = 0; i < existingBerth.length; i++) {
			berth[i] = existingBerth[i];
		}
		berth[existingBerth.length] = string;
		return berth;
	}

	private static String[] updatedGender(String[] existingGender, String string) {
		if (existingGender == null) {
			existingGender = new String[0];
		}
		String[] gender = new String[existingGender.length + 1];
		for (int i = 0; i < existingGender.length; i++) {
			gender[i] = existingGender[i];
		}
		gender[existingGender.length] = string;
		return gender;
	}

	private static int[] updatedAge(int[] existingAge, int number) {
		if (existingAge == null) {
			existingAge = new int[0];
		}
		int[] age = new int[existingAge.length + 1];
		for (int i = 0; i < existingAge.length; i++) {
			age[i] = existingAge[i];
		}
		age[existingAge.length] = number;
		return age;
	}

	private static String[] updatedName(String[] existingName, String string) {
		if (existingName == null) {
			existingName = new String[0];
		}
		String[] name = new String[existingName.length + 1];
		for (int i = 0; i < existingName.length; i++) {
			name[i] = existingName[i];
		}
		name[existingName.length] = string;
		return name;
	}
	
	private static String[] deleteNameOrGender(int d, String[] nameOrGender) {
		String[] afterDeletedNameArray = new String[nameOrGender.length - 1];
	    for(int i=0, j=0;i<nameOrGender.length;i++) {
	        if(i == (d-1)) {
	            continue;
	        }
	           afterDeletedNameArray[j++] = nameOrGender[i];
	}
	return afterDeletedNameArray;

	}
	private static int[] deleteAge(int d, int[] age2) {
		  int[] afterDeletedAge = new int[age2.length -1];
		    for(int i=0, j=0;i<age2.length;i++) {
		        if(i == (d-1)) {
		            continue;
		        }
		     afterDeletedAge[j++] = age2[i];
		}
		return afterDeletedAge;
	}
	

	private static String[] deleteBerth(int d, String[] berth2) {
		 String[] afterDeletedBerth = new String[berth2.length -1];
		    for(int i=0, j=0;i<berth2.length;i++) {
		        if(i == (d-1)) {
		            if(racc>0){
		            	if(berth2[i].equals("rac"));
		            		racc--;
		            }
		            	 if(wlc>0){
		            		 
		            	}
		        }
		     afterDeletedBerth[j++] = berth2[i];
		}
		return afterDeletedBerth;
	}
	

}
}
